AWSTemplateFormatVersion: 2010-09-09
Resources:
  UpdateCFLambda:
    Properties:
      Code:
        ZipFile: |
          import boto3
          def handler(event, context):
            cf = boto3.resource("cloudformation")
            stackname = event['stackName']
            
            response = cf.Stack(stackname)
            outputs = {output["OutputKey"]: output["OutputValue"] for output in response.outputs}
            lambdaArn = outputs['LambdaArn']
            
            s3 = boto3.resource('s3')
            bucket_name = event['bucketName']
            bucket_notification = s3.BucketNotification(bucket_name)
            response = bucket_notification.put(
                    NotificationConfiguration={'LambdaFunctionConfigurations': [
                        {
                            'LambdaFunctionArn': lambdaArn,
                            'Events': [
                                's3:ObjectCreated:*'
                            ],
            
                        },
                    ]})
      FunctionName: notificationLambda
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.9
      Timeout: 60
    Type: 'AWS::Lambda::Function'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: abf6b836-0ba7-4e1b-8c97-6bb0b478ef47
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      RoleName: teste
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: teste2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutBucketNotification'
                  - 'cloudformation:DescribeStacks'
                Resource: '*'
